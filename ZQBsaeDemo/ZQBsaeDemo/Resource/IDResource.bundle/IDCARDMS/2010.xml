<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE IDCARD SYSTEM "IDCARD.dtd">
<IDCARD>
 <CIDCardTemplate nMainDocumentID="2010" chDocumentName="印度尼西亚居民身份证" engDocumentName="Indonesia Resident Identity Card" imageSizeType="2">
   <vecAutoProcess>
			<vecProcessMode nMode="1"> 
				<!--CAutoProcess processType="23">
				  <CIDCardAutoProcessEx2 nCropType="4" nMaxAngle="0.3" nMinAngle="0.017" nFilledType="1" bIs180Rotate="0" bIsValid="0"  bSameSize="1"/> 
				</CAutoProcess-->  
				<CAutoProcess processType="24">
				  <PerspectiveTransform nType="3" bIs180Rotate="0" bIsValid="1" nWidth="896" nHeight="569"/> 
				</CAutoProcess>  
			</vecProcessMode>
		</vecAutoProcess>    
     <vecProcessImage>
      <CProcessImage processType="3">
        <CEraseBlackBorderEx>
          <!--processRect要检测黑边的区域-->
          <RECT Left="0" Top="0" Right="10000" Bottom="10000" />
          <!--unProcessRect在要检测的区域里，能够确定的不需要检测黑边的部分，











					也就是说这个区域肯定没有黑边存在，用来提高检测效-->
          <RECT Left="800" Top="800" Right="9200" Bottom="9800" />
        </CEraseBlackBorderEx>
      </CProcessImage>
    </vecProcessImage>
    
    <!--vecAnchor:该证件的所有的基准点的信息-->
    <!--anchorType:基准点类型，取值如下


















			ZEROANCHOR=0,//(0,0)基准
			LEFT=1,//左边
			RIGHT=2,//右边
			TOP=3,//上边
			BOTTOM=4,//下边
		-->
    <vecRegion> 
		<CRegion nIndex="0" nRegionType="0" nProcessOrder="0">
			<!--处理该区域需要的图像信息的光的类型-->
			<vecImageLightType>
				<!--1:可见光图;2:红外光图;4:紫外光图 -->
				<LIGHTTYPE>1</LIGHTTYPE>
				<LIGHTTYPE>2</LIGHTTYPE>
			</vecImageLightType>
			<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
			<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
			<CLocateRegion bAccurateLocate="1">
				<!--在定位前进行的预处理信息，一般是二值化-->
				<vecProcessImage>
					<CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
							<RECT Top="0" Right="0" Bottom="0" Left="0"/>
						</CTrueColorToGrayEx>
					</CProcessImage>
				</vecProcessImage>
				<!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				<RECT Left="7197" Top="2007" Right="9005" Bottom="6065"/>
				<vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6758" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9525" anchorType="2"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1591" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6620" anchorType="4"/>
				</vecAnchorLocateInfo>
				<!--定义区域基准点-->
				<vecCLocateAnchor>
				</vecCLocateAnchor>
				<!--该区域定义的区域类型基准点的信息-->
			</CLocateRegion>
					<!--区域内定位行的信息-->
		</CRegion>
		<CRegion nIndex="1" nRegionType="1" nProcessOrder="1">
			<!--处理该区域需要的图像信息的光的类型-->
			<vecImageLightType>
				<!--1:可见光图;2:红外光图;4:紫外光图 -->
				<LIGHTTYPE>2</LIGHTTYPE>
				<LIGHTTYPE>1</LIGHTTYPE>
			</vecImageLightType>
			<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
			<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
			<CLocateRegion bAccurateLocate="0">
				<!--在定位前进行的预处理信息，一般是二值化-->
				<vecProcessImage>
					<CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
							<RECT Top="0" Right="0" Bottom="0" Left="0"/>
						</CTrueColorToGrayEx>
					</CProcessImage>
				</vecProcessImage>
				<!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				<RECT Left="430" Top="1760" Right="6543" Bottom="2240"/>
				<vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="168" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6880" anchorType="2"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="1386" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2720" anchorType="4"/>
				</vecAnchorLocateInfo>
				<!--定义区域基准点-->
				<vecCLocateAnchor>
				</vecCLocateAnchor>
				<!--该区域定义的区域类型基准点的信息-->
			</CLocateRegion>
					<!--区域内定位行的信息-->
		<CLocateLine>
          <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="0" Top="0" Right="100" Bottom="100" />
          <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
          <RECT Left="30" Top="0" Right="80" Bottom="100" />
          <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
          <!--bHeight:是否等高-->
          <!--bSpace:是否等间距-->
          <!--bWidth:是否等宽-->
          <!--nMinElementNum:该行最少元素数-->
          <!--nMaxElementNum:该行最多元素数-->
          <!--nMinWidth:元素的最小宽度-->
          <!--nMaxWidth:元素的最大宽度-->
          <!--nMinHeight:元素的最小高度-->
          <!--nMaxHeight:元素的最大高度-->
          <!--nMinSpace:元素间的最小间距-->
          <!--nMaxSpace:元素间的最大间距-->
          <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="1" nMaxElementNum="1" nMinWidth="3000" nMaxWidth="9800" nMinHeight="300" nMaxHeight="857" nMinSpace="50" nMaxSpace="300" bPostProcess="0">
            <vecCLocateMethod>
              <CLocateMethod nLocateMethod="0">
                <!--在定位前进行的预处理信息，一般是二值化-->
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0" />
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
              <CLocateMethod nLocateMethod="1">
                <vecProcessImage>
                  <CProcessImage processType="1">
                    <CTrueColorToGrayEx nFilter="0">
                      <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                    </CTrueColorToGrayEx>
                  </CProcessImage>
                  <CProcessImage processType="2">
                    <CGrayToBinaryEx>
                      <vecBinaryParam>
                        <BINARYPARAM nBlockNum="1" nMethod="7" />
                        <BINARYPARAM nBlockNum="1" nMethod="6" />
                      </vecBinaryParam>
                      <!--processRect-->
                      <RECT Left="0" Top="0" Right="0" Bottom="0" />
                    </CGrayToBinaryEx>
                  </CProcessImage>
                </vecProcessImage>
              </CLocateMethod>
            </vecCLocateMethod>
          </CLocateInfo>
          <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
					也是整图的百分比*10000计算出来的-->
          <positionPlus nLeftPlus="-10" nRightPlus="100" nTopPlus="-30" nBottomPlus="30" />
        </CLocateLine>
        <vecLine>
          <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
          <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
          <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
          <!--nLineType:0代表不需要识别，1代表需要识别-->
          <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
            <!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
						    如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
						-->
            <RECT Left="0" Top="0" Right="0" Bottom="0" />
            <!--nRecogType:0识别区域，1识别字符-->
            <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
            <!--cellRecogType:识别内容
								NAMECH=0,//中文姓名
								SEX=1,//性别
								NATION=2,//民族
								BIRTHDAY=3,//出生日期
								ISSUINGDATE=4,//签发日期
								VALIDPERIOD=5,//有效期至
								ADDRESSS=6,//地址
								IDNUMBER=7,//身份证号码
 
								PPMRZ1=8,//护照类型证件的机读码第一行 
								PPMRZ2=9,//护照类型证件的机读码第二行 
								OTHER=10//其他类型
						-->
            <!--charOrder:字符的排列情况，用正则表达式表示-->
            <!--kernalMainType识别核心主类型 
								THOCR=1,
								SSFT152=2,
								BARCODE=3
						-->
            <CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="0" charOrder="" bConfirmParams="0">
              <!--定位字符的信息-->
              <!--定位字符的信息-->
              <!--nLocateMethod:  0,用识别核心做定位;
												1，提取连通域的方法进行定位;
												2，投影方法进行定位 
							-->
              <!--bHeight:是否等高-->
              <!--bSpace:是否等间距-->
              <!--bWidth:是否等宽-->
              <!--nMinElementNum:该行最少元素数-->
              <!--nMaxElementNum:该行最多元素数-->
              <!--nMinWidth:元素的最小宽度-->
              <!--nMaxWidth:元素的最大宽度-->
              <!--nMinHeight:元素的最小高度-->
              <!--nMaxHeight:元素的最大高度-->
              <!--nMinSpace:元素间的最小间距-->
              <!--nMaxSpace:元素间的最大间距-->
              <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="140" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="16" nMaxElementNum="-1" nMinWidth="60" nMaxWidth="500" nMinHeight="300" nMaxHeight="600" nMinSpace="40" nMaxSpace="2000" bPostProcess="1">
                <vecCLocateMethod>
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="6" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                  <CLocateMethod nLocateMethod="1">
                    <vecProcessImage>
                      <CProcessImage processType="1">
                        <CTrueColorToGrayEx nFilter="0">
                          <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                        </CTrueColorToGrayEx>
                      </CProcessImage>
                      <CProcessImage processType="2">
                        <CGrayToBinaryEx>
                          <vecBinaryParam>
                            <BINARYPARAM nBlockNum="1" nMethod="7" />
                            <BINARYPARAM nBlockNum="1" nMethod="3" />
                          </vecBinaryParam>
                          <!--processRect-->
                          <RECT Left="0" Top="0" Right="0" Bottom="0" />
                        </CGrayToBinaryEx>
                      </CProcessImage>
                    </vecProcessImage>
                  </CLocateMethod>
                </vecCLocateMethod>
              </CLocateInfo>
              <vecKernal>
                <!--nRecogType:0识别区域，1识别字符-->
                <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                  <vecCharRatio> 
                    <CCharRatio strChars="" charType="3" nWHRatio="85" />
                  </vecCharRatio>
                </CKernalInfo>
              </vecKernal>
            </CRecogInfo>
            <!--vecRecogUnit:行内识别单元的信息-->
            <vecRecogUnit>
              <!--nIndex:识别单元序号-->
              <!--cellName:识别单元名称-->
              <!--bLocate:该识别单元是否需要定位-->
              <!--bReRecog:该识别单元是否需要重新识别-->
              <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
              <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
              <CRecogUnit nIndex="1" bLocate="1" bRecog="1">
                <CLocateRecogUnit bStart="0" nStartIndexInChar="-1" bEnd="1" nEndIndexInChar="0">
                  <vecAnchorLocateInfo>
                    <CAnchorLocateInfo nDisToAnchor="1007" nAnchorIndex="1" anchorType="1" />
                    <CAnchorLocateInfo nDisToAnchor="2210" nAnchorIndex="0" anchorType="1" />
                  </vecAnchorLocateInfo>
                </CLocateRecogUnit>
                <CRecogInfo bIgnorePoint="0" nMaxPointWidth="0" nMaxPointHeight="0" bMatchRegExp="1" charOrder="\D{16}" bConfirmParams="0">
                  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="100" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="14" nMaxElementNum="18" nMinWidth="60" nMaxWidth="380" nMinHeight="400" nMaxHeight="620" nMinSpace="0" nMaxSpace="230" bPostProcess="1">
                    <vecCLocateMethod>
                      <CLocateMethod nLocateMethod="1">
                        <vecProcessImage>
                          <CProcessImage processType="1">
                            <CTrueColorToGrayEx nFilter="0">
                              <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
                            </CTrueColorToGrayEx>
                          </CProcessImage>
                          <CProcessImage processType="2">
                            <CGrayToBinaryEx>
                              <vecBinaryParam> 
                                <BINARYPARAM nBlockNum="1" nMethod="3" />
                              </vecBinaryParam>
                              <!--processRect-->
                              <RECT Left="0" Top="0" Right="0" Bottom="0" />
                            </CGrayToBinaryEx>
                          </CProcessImage>
                        </vecProcessImage>
                      </CLocateMethod>
                    </vecCLocateMethod>
                  </CLocateInfo>
                  <vecKernal>
                    <!--nRecogType:0识别区域，1识别字符-->
                    <!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
                    <CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="0" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
                      <vecCharRatio>
                        <CCharRatio strChars="" charType="2" nWHRatio="70" />
                      </vecCharRatio>
                    </CKernalInfo>
                  </vecKernal>
                </CRecogInfo>
              </CRecogUnit>
            </vecRecogUnit>
            <!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
            <vecLineKeyWord>
              <CKeyWord nMinWidth="-1" nMaxHeight="-1" content="K" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
                <vecCLocateAnchor>
                  <CLocateAnchor nDisToAnchor="10" nAnchorIndex="1" anchorType="2" />
                </vecCLocateAnchor>
              </CKeyWord>
              <CKeyWord nMinWidth="-1" nMaxHeight="-1" content="N" nMinHeight="-1" nConfirmType="1" nMaxWidth="-1">
                <vecCLocateAnchor>
                  <CLocateAnchor nDisToAnchor="510" nAnchorIndex="1" anchorType="2" />
                </vecCLocateAnchor>
            </CKeyWord>
            </vecLineKeyWord>
            <vecCLocateAnchor>
                <CLocateAnchor nDisToAnchor="0" nAnchorIndex="2" anchorType="4" />
            </vecCLocateAnchor>
          </CLine>
        </vecLine>
     
		</CRegion>
		<CRegion nIndex="2" nRegionType="1" nProcessOrder="2">
			<!--处理该区域需要的图像信息的光的类型-->
			<vecImageLightType>
				<!--1:可见光图;2:红外光图;4:紫外光图 -->
				<LIGHTTYPE>2</LIGHTTYPE>
				<LIGHTTYPE>1</LIGHTTYPE>
			</vecImageLightType>
			<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
			<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
			<CLocateRegion bAccurateLocate="0">
				<!--在定位前进行的预处理信息，一般是二值化-->
				<vecProcessImage>
					<CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
							<RECT Top="0" Right="0" Bottom="0" Left="0"/>
						</CTrueColorToGrayEx>
					</CProcessImage>
				</vecProcessImage>
				<!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				<RECT Left="2664" Top="2693" Right="6020" Bottom="3946"/>
				<vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="1370" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2445" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6897" anchorType="2"/>
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="20" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2240" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="2080" anchorType="4"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="4160" anchorType="4"/>
				</vecAnchorLocateInfo>
				<!--定义区域基准点-->
				<vecCLocateAnchor>
				</vecCLocateAnchor>
				<!--该区域定义的区域类型基准点的信息-->
			</CLocateRegion>
					<!--区域内定位行的信息-->
		     <CLocateLine>
			  <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
			  <RECT Left="0" Top="0" Right="100" Bottom="100" />
			  <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
			  <RECT Left="0" Top="0" Right="30" Bottom="100" />
			  <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
			  <!--bHeight:是否等高-->
			  <!--bSpace:是否等间距-->
			  <!--bWidth:是否等宽-->
			  <!--nMinElementNum:该行最少元素数-->
			  <!--nMaxElementNum:该行最多元素数-->
			  <!--nMinWidth:元素的最小宽度-->
			  <!--nMaxWidth:元素的最大宽度-->
			  <!--nMinHeight:元素的最小高度-->
			  <!--nMaxHeight:元素的最大高度-->
			  <!--nMinSpace:元素间的最小间距-->
			  <!--nMaxSpace:元素间的最大间距-->
			  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="3" nMaxElementNum="4" nMinWidth="100" nMaxWidth="5000" nMinHeight="200" nMaxHeight="670" nMinSpace="50" nMaxSpace="600" bPostProcess="0">
				<vecCLocateMethod>
				  <CLocateMethod nLocateMethod="0">
					<!--在定位前进行的预处理信息，一般是二值化-->
					<vecProcessImage>
					  <CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
						  <RECT Top="0" Right="0" Bottom="0" Left="0" />
						</CTrueColorToGrayEx>
					  </CProcessImage>
					</vecProcessImage>
				  </CLocateMethod>
				  <CLocateMethod nLocateMethod="1">
					<vecProcessImage>
					  <CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
						  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
						</CTrueColorToGrayEx>
					  </CProcessImage>
					  <CProcessImage processType="2">
						<CGrayToBinaryEx>
						  <vecBinaryParam>
							<BINARYPARAM nBlockNum="1" nMethod="7" />
							<BINARYPARAM nBlockNum="1" nMethod="6" />
						  </vecBinaryParam>
						  <!--processRect-->
						  <RECT Left="0" Top="0" Right="0" Bottom="0" />
						</CGrayToBinaryEx>
					  </CProcessImage>
					</vecProcessImage>
				  </CLocateMethod>
				</vecCLocateMethod>
			  </CLocateInfo>
			  <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
						也是整图的百分比*10000计算出来的-->
			  <positionPlus nLeftPlus="-10" nRightPlus="100" nTopPlus="-30" nBottomPlus="30" />
			</CLocateLine>
				
			<vecLine>
			  <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
			  <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
			  <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
			  <!--nLineType:0代表不需要识别，1代表需要识别-->
			  <CLine nIndex="0" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="170" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="230" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="200" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="3" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam>
								<BINARYPARAM nBlockNum="1" nMethod="8" /> 
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="I" charType="10" nWHRatio="30" />
					  </vecCharRatio>
					</CKernalInfo>
					<CKernalInfo kernalMainType="1" nKernalSubType="9" nFilterType="1" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" /> 
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="2" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="1" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="170" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="230" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="885" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="3" />
								<BINARYPARAM nBlockNum="1" nMethod="7" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="" charType="2" nWHRatio="60" />
						<CCharRatio strChars="I" charType="10" nWHRatio="30" />
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="4" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="2" bStartOffset="1" bEndOffset="0" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="120" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="200" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="200" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="7" />
								<BINARYPARAM nBlockNum="1" nMethod="3" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="I" charType="10" nWHRatio="30" />
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="5" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="3" bStartOffset="1" bEndOffset="0" bExist="0" bNeedRecog="0" nCheckKeyWord="0">
			  </CLine>
			  
			</vecLine>
		 
		</CRegion>
		<CRegion nIndex="3" nRegionType="1" nProcessOrder="3">
			<!--处理该区域需要的图像信息的光的类型-->
			<vecImageLightType>
				<!--1:可见光图;2:红外光图;4:紫外光图 -->
				<LIGHTTYPE>2</LIGHTTYPE>
				<LIGHTTYPE>1</LIGHTTYPE>
			</vecImageLightType>
			<!--定义区域的定位信息,如果是头像区域还需要进一步精确定位，识别区域就不用了-->
			<!--bAccurateLocate为1表示需要进一步精确定位,0代表不需要-->
			<CLocateRegion bAccurateLocate="0">
				<!--在定位前进行的预处理信息，一般是二值化-->
				<vecProcessImage>
					<CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
							<RECT Top="0" Right="0" Bottom="0" Left="0"/>
						</CTrueColorToGrayEx>
					</CProcessImage>
				</vecProcessImage>
				<!--rcMinRect:指定定位区域的最小范围，即定位后的区域范围必须包含这个区域-->
				<RECT Left="2664" Top="6400" Right="5126" Bottom="8560"/>
				<vecAnchorLocateInfo>
					<!--nDisToAnchor的值也是整图的百分比*10000计算出来的-->
					<CAnchorLocateInfo nAnchorIndex="1" nDisToAnchor="1370" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="2445" anchorType="1"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6795" anchorType="2"/>
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="3700" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="6266" anchorType="3"/>
					<CAnchorLocateInfo nAnchorIndex="2" nDisToAnchor="6640" anchorType="4"/>
					<CAnchorLocateInfo nAnchorIndex="0" nDisToAnchor="9040" anchorType="4"/>
				</vecAnchorLocateInfo>
				<!--定义区域基准点-->
				<vecCLocateAnchor>
				</vecCLocateAnchor>
				<!--该区域定义的区域类型基准点的信息-->
			</CLocateRegion>
					<!--区域内定位行的信息-->
		    <CLocateLine>
			  <!--rcHorizontal：进行行的左右边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
			  <RECT Left="0" Top="0" Right="100" Bottom="100" />
			  <!--rcVertical：进行行的上下边界定位时的区域范围，坐标单位为所在区域的百分比*100-->
			  <RECT Left="0" Top="0" Right="30" Bottom="100" />
			  <!--nLocateMethod:0灰度变化的方式进行行定位;1投影方式进行行定位-->
			  <!--bHeight:是否等高-->
			  <!--bSpace:是否等间距-->
			  <!--bWidth:是否等宽-->
			  <!--nMinElementNum:该行最少元素数-->
			  <!--nMaxElementNum:该行最多元素数-->
			  <!--nMinWidth:元素的最小宽度-->
			  <!--nMaxWidth:元素的最大宽度-->
			  <!--nMinHeight:元素的最小高度-->
			  <!--nMaxHeight:元素的最大高度-->
			  <!--nMinSpace:元素间的最小间距-->
			  <!--nMaxSpace:元素间的最大间距-->
			  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="160" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="5" nMaxElementNum="6" nMinWidth="100" nMaxWidth="5000" nMinHeight="200" nMaxHeight="670" nMinSpace="50" nMaxSpace="600" bPostProcess="0">
				<vecCLocateMethod>
				  <CLocateMethod nLocateMethod="0">
					<!--在定位前进行的预处理信息，一般是二值化-->
					<vecProcessImage>
					  <CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
						  <RECT Top="0" Right="0" Bottom="0" Left="0" />
						</CTrueColorToGrayEx>
					  </CProcessImage>
					</vecProcessImage>
				  </CLocateMethod>
				  <CLocateMethod nLocateMethod="1">
					<vecProcessImage>
					  <CProcessImage processType="1">
						<CTrueColorToGrayEx nFilter="0">
						  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
						</CTrueColorToGrayEx>
					  </CProcessImage>
					  <CProcessImage processType="2">
						<CGrayToBinaryEx>
						  <vecBinaryParam>
							<BINARYPARAM nBlockNum="1" nMethod="7" />
							<BINARYPARAM nBlockNum="1" nMethod="6" />
						  </vecBinaryParam>
						  <!--processRect-->
						  <RECT Left="0" Top="0" Right="0" Bottom="0" />
						</CGrayToBinaryEx>
					  </CProcessImage>
					</vecProcessImage>
				  </CLocateMethod>
				</vecCLocateMethod>
			  </CLocateInfo>
			  <!--采用定位算法对行定位后，边界要浮动的大小，可以为负数
						也是整图的百分比*10000计算出来的-->
			  <positionPlus nLeftPlus="-10" nRightPlus="100" nTopPlus="-30" nBottomPlus="30" />
			</CLocateLine>
				
			<vecLine>
			  <!--nIndex:该行在区域内是第几行，以第一行或者最后一行为基准从0开始的偏移-->
			  <!--bStartOffset:如果是以区域的第一行为基准，该值为true,否则为false-->
			  <!--bEndOffset:如果是以区域的最后一行为基准，该值为false，否则为false-->
			  <!--nLineType:0代表不需要识别，1代表需要识别-->
			  <CLine nIndex="5" bStartOffset="0" bEndOffset="1" bExist="0" bNeedRecog="0" nCheckKeyWord="0">
			  </CLine>
			  <CLine nIndex="4" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="170" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="230" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="200" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="3" />
								<BINARYPARAM nBlockNum="1" nMethod="7" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam>
								<BINARYPARAM nBlockNum="1" nMethod="8" /> 
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="I" charType="10" nWHRatio="20" />
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="6" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="3" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
			  </CLine>
			  <CLine nIndex="2" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="170" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="400" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="200" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="3" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="8" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="I" charType="10" nWHRatio="30" />
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="8" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="1" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="1" nCheckKeyWord="0">
				<!--rcLineResult:行的初始位置信息，初始值尽量写最小的区域范围，这样最准确
								如果都为0代表该值不可靠，坐标单位为坐标均为占整张图像的百分比*10000
							-->
				<RECT Left="0" Top="0" Right="0" Bottom="0" />
				<!--nRecogType:0识别区域，1识别字符-->
				<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
				<!--cellRecogType:识别内容
									NAMECH=0,//中文姓名
									SEX=1,//性别
									NATION=2,//民族
									BIRTHDAY=3,//出生日期
									ISSUINGDATE=4,//签发日期
									VALIDPERIOD=5,//有效期至
									ADDRESSS=6,//地址
									IDNUMBER=7,//身份证号码
	 
									PPMRZ1=8,//护照类型证件的机读码第一行 
									PPMRZ2=9,//护照类型证件的机读码第二行 
									OTHER=10//其他类型
							-->
				<!--charOrder:字符的排列情况，用正则表达式表示-->
				<!--kernalMainType识别核心主类型 
									THOCR=1,
									SSFT152=2,
									BARCODE=3
							-->
				<CRecogInfo bIgnorePoint="1" nMaxPointWidth="50" nMaxPointHeight="100" bMatchRegExp="1" charOrder="\C{1,-1}" bConfirmParams="0">
				  <!--定位字符的信息-->
				  <!--定位字符的信息-->
				  <!--nLocateMethod:  0,用识别核心做定位;
													1，提取连通域的方法进行定位;
													2，投影方法进行定位 
								-->
				  <!--bHeight:是否等高-->
				  <!--bSpace:是否等间距-->
				  <!--bWidth:是否等宽-->
				  <!--nMinElementNum:该行最少元素数-->
				  <!--nMaxElementNum:该行最多元素数-->
				  <!--nMinWidth:元素的最小宽度-->
				  <!--nMaxWidth:元素的最大宽度-->
				  <!--nMinHeight:元素的最小高度-->
				  <!--nMaxHeight:元素的最大高度-->
				  <!--nMinSpace:元素间的最小间距-->
				  <!--nMaxSpace:元素间的最大间距-->
				  <CLocateInfo bEraseStart="0" nMinWHRatio="0" nMaxWHRatio="170" nSplitWHRatio="2000" bSplit="0" nNumType="0" bSpace="0" bWidth="0" bHeight="0" bRemoveLineNoise="0" nMinElementNum="2" nMaxElementNum="-1" nMinWidth="20" nMaxWidth="400" nMinHeight="100" nMaxHeight="530" nMinSpace="0" nMaxSpace="200" bPostProcess="1">
					<vecCLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="3" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					  <CLocateMethod nLocateMethod="1">
						<vecProcessImage>
						  <CProcessImage processType="1">
							<CTrueColorToGrayEx nFilter="0">
							  <RECT Top="0" Right="0" Bottom="0" Left="0"></RECT>
							</CTrueColorToGrayEx>
						  </CProcessImage>
						  <CProcessImage processType="2">
							<CGrayToBinaryEx>
							  <vecBinaryParam> 
								<BINARYPARAM nBlockNum="1" nMethod="8" />
							  </vecBinaryParam>
							  <!--processRect-->
							  <RECT Left="0" Top="0" Right="0" Bottom="0" />
							</CGrayToBinaryEx>
						  </CProcessImage>
						</vecProcessImage>
					  </CLocateMethod>
					</vecCLocateMethod>
				  </CLocateInfo>
				  <vecKernal>
					<!--nRecogType:0识别区域，1识别字符-->
					<!--nRecogImgeType:进行识别时需要的图像类型，0代表灰度，1代表二值-->
					<CKernalInfo kernalMainType="1" nKernalSubType="7" nFilterType="256" nFillingMethod="1" strFilterPlus="" nRecogType="1" nRecogImgeType="0">
					  <vecCharRatio> 
						<CCharRatio strChars="" charType="3" nWHRatio="85" />
						<CCharRatio strChars="I" charType="10" nWHRatio="30" />
					  </vecCharRatio>
					</CKernalInfo>
				  </vecKernal>
				</CRecogInfo>
				<!--vecRecogUnit:行内识别单元的信息-->
				<vecRecogUnit>
				  <!--nIndex:识别单元序号-->
				  <!--cellName:识别单元名称-->
				  <!--bLocate:该识别单元是否需要定位-->
				  <!--bReRecog:该识别单元是否需要重新识别-->
				  <!--OutputThreshold:输出界限一，待输出的识别结果的字频的值不能低于该值-->
				  <!--输出界限二，字频值< OutputThreshold的个数最大不能超过该值，否则将不输出-->
				  <CRecogUnit nIndex="7" bLocate="0" bRecog="0">
				  </CRecogUnit>
				</vecRecogUnit>
				<!--vecLineKeyWord:记录该行内用来定位的关键字信息-->
				<vecLineKeyWord>
				</vecLineKeyWord>
				<vecCLocateAnchor>
				</vecCLocateAnchor>
			  </CLine>
			  <CLine nIndex="0" bStartOffset="0" bEndOffset="1" bExist="1" bNeedRecog="0" nCheckKeyWord="0">
			  </CLine>
			  
			</vecLine>
		 
		</CRegion>
				
    </vecRegion>
    <vecAnchor>
      <CAnchor nIndex="0" anchorType="0" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
      <!--NIK关键字右基准点-->
      <CAnchor nIndex="1" anchorType="2" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
      <!--身份证号行下基准点-->
      <CAnchor nIndex="2" anchorType="4" anchorPos="0" bEnable="0" nMinPos="-1" nMaxPos="-1" />
    </vecAnchor>
    <vecOutPutResult>
      <COutPutResult nIndex="0" cellRecogType="20" cellNameEng="Reserve" cellName="预留" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="1" cellRecogType="20" cellNameEng="ID Number" cellName="身份号码" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="2" cellRecogType="20" cellNameEng="Name" cellName="姓名" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" bMainField="1" nRejectThresh="10"/> 
      <COutPutResult nIndex="3" cellRecogType="20" cellNameEng="Date of Birth" cellName="出生日期" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/> 
      <COutPutResult nIndex="4" cellRecogType="20" cellNameEng="Place/Date of Birth" cellName="出生地/出生日期" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/> 
      <COutPutResult nIndex="5" cellRecogType="20" cellNameEng="Gender" cellName="性别" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/> 
      <COutPutResult nIndex="6" cellRecogType="20" cellNameEng="Religion" cellName="宗教" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/>
      <COutPutResult nIndex="7" cellRecogType="20" cellNameEng="Nationality" cellName="国籍" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/> 
      <COutPutResult nIndex="8" cellRecogType="20" cellNameEng="Occupation" cellName="职业" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/> 
      <COutPutResult nIndex="9" cellRecogType="20" cellNameEng="Blood group" cellName="血型" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0" />
      <COutPutResult nIndex="10" cellRecogType="20" cellNameEng="Address" cellName="住址" nOutputThreshold="0" nOutputNumber="0" bFormatResult="0"/>
    </vecOutPutResult>
    <vecMergeUnit>   
		<CMergeUnit nDestUnitIndex="5" nDestUnitType="4" nSrcUnitIndex="5" nSrcUnitType="4" strSrc="" strDest="LAKI-LAKI$PEREMPUAN$" nProcessPos="48" bMeet="" bSynchronous="0" nOperateType="6"/> 
		<CMergeUnit nDestUnitIndex="7" nDestUnitType="4" nSrcUnitIndex="7" nSrcUnitType="4" strSrc="" strDest="WNI$" nProcessPos="48" bMeet="" bSynchronous="0" nOperateType="6"/> 
		<CMergeUnit nDestUnitIndex="6" nDestUnitType="4" nSrcUnitIndex="6" nSrcUnitType="4" strSrc="" strDest="KATHOLIK$ISLAM$KRISTEN$BUDHA$" nProcessPos="48" bMeet="" bSynchronous="0" nOperateType="6"/> 
		<CMergeUnit nDestUnitIndex="8" nDestUnitType="4" nSrcUnitIndex="8" nSrcUnitType="4" strSrc="" strDest="KARYAWAN SWASTA$WIRASWASTA$MENGURUS RUMAH TANGGA$BURUH HARIAN LEPAS$KARYAWAN BUMN$PELAJAR/MAHASISWA" nProcessPos="48" bMeet="" bSynchronous="0" nOperateType="6"/> 
    </vecMergeUnit>    
</CIDCardTemplate>

</IDCARD>